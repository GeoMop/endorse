flow123d_version: 4.0.0
problem: !Coupling_Sequential
  description: |
      Transport problem with Darcy flow driven by the boundary condition from the larger model.
      Source term is prescribed as volumetric in container region given by the index of container position.
  mesh:
    mesh_file: <mesh_file>
    regions:
      - !Union
        name: .box_drilled
        regions:
          - .side_x0
          - .side_x1
          - .side_y0
          - .side_y1
          - .side_z0
          - .side_z1
      #          - .tunnel_heads
      - !Union
        name: storages
        regions:
          - storage_0
          - storage_1
          - storage_3
          - storage_4
      - !From_Label
        name: plug
        mesh_label: plug_2
        allow_empty: False
      - !From_Label
        name: container
        mesh_label: container_2
        allow_empty: False

      # Resolve fracture regions.
      # Allow empty regions if no fractures are present.
      - !From_Label
        name: .fractures_box
        mesh_label: .fractures_out
        allow_empty: True
      - !From_Label
        name: fr_large_temp
        mesh_label: fr_large
        allow_empty: True
      - !From_Label
        name: fr_small_temp
        mesh_label: fr_small
        allow_empty: True
      - !Union
        name: fractures
        regions:
            - fr_large_temp
            - fr_small_temp

  flow_equation: !Flow_Darcy_LMH
    output_specific:
    nonlinear_solver:
      linear_solver: !Petsc
        a_tol: <flow_solver__a_tol>
        r_tol: <flow_solver__r_tol>
        options: -ksp_type cg -pc_type hypre -pc_hypre_type boomeramg  -pc_hypre_boomeramg_coarsen_type HMIS -pc_hypre_boomeramg_strong_threshold 0.5  -ksp_monitor

    input_fields:
#      - region: [.tunnel_head_y0, .tunnel_head_y1] # tunnels are sealed
      - region: [ .side_y0, .side_y1, .fractures_box ]
        bc_type: dirichlet
        bc_piezo_head: !FieldFormula
          value: -y+30
#      - region: [.box_drilled, .fractures_out]
#        bc_type: dirichlet
#        bc_piezo_head: !FieldFormula
#          value: (20-y)-0.1*z
#        bc_piezo_head: !FieldFE
#          mesh_data_file: <piezo_head_input_file>
#          field_name: piezo_head_p0
#          interpolation: P0_intersection
      - region: [box, fractures]
        conductivity:  !FieldFE
          mesh_data_file: <input_fields_file>
          field_name: conductivity
          #interpolation: P0_intersection
        cross_section:  !FieldFE
          mesh_data_file: <input_fields_file>
          field_name: cross_section
          #interpolation: P0_intersection
        sigma: 0.01
      # TODO: bentonite
      - region: [ main_tunnel, storages, plug, container ]
        conductivity: 1e-13

    output:
      fields:
        - piezo_head_p0
        - pressure_p0
        #- pressure_p1
        - velocity_p0
        - region_id
        - conductivity
        - cross_section
    balance:
      cumulative: true
    output_stream:
      format: !vtk
        variant: ascii

  solute_equation: !Coupling_OperatorSplitting
    substances:
        - name: <conc_name> # uranium 235; should rather be Iodium with zero K_d.
          molar_mass: 0.235
    transport: !Solute_AdvectionDiffusion_DG
      user_fields:
        - name: source_bc_flux_t
          field: !FieldTimeFunction
            time_function: # conc_flux_UOS_[kg:y]
              values: !include_csv
                file: <conc_flux_file>
                separator: ","
                n_head_lines: 1
                format:
                  t:
                    time: $0
                  value: [ [ $1 ] ]
                  # CSV reader is not compatible with automatic conversion to the tensor,
                  # which is the input shape of all FieldConstant and FieldTimeFunction fields.

      input_fields:
        - region: [box, fractures]
          porosity: !FieldFE
            mesh_data_file: <input_fields_file>
            field_name: porosity

          # dg_penalty: 1       # mass: 80, error: 4.5, default value, solution highly oscilates
          # dg_penalty: 10      # mass: 40, error: 4.0,  high error, hard to converge
          # dg_penalty: 100     # mass: 27, error: 16,  high error, hard to converge
          dg_penalty: <dg_penalty>
          diff_m: <diffusivity_effective>
          disp_l: <dispersivity_L>
          disp_t: <dispersivity_T>

        # TODO: bentonite
        - region: [ main_tunnel, storages, plug, container ]
          porosity: 0.1
          dg_penalty: 10
          diff_m: 1e-15
          disp_l: 1
          disp_t: 0.1

        # TODO: file contains flux, compute volume source!
        - region: [ container ]
#          sources_density: !FieldFormula
#            # [kg/y/m2] -> [kg/s/m2] -> (*S) [kg/s] -> (/V) [kg/s/m3]
#            # UOS surface: S = pi*d*h
#            # container region volume: V = pi*d^2/4*h
#            value: source_bc_flux_t / (365.2425 * 24 * 3600) * (3.14*0.914*3.790) / (3.14*1.65**2*0.25*4.54)
          sources_sigma: !FieldFormula
            # UOS surface: S = pi * du * hu [m2]
            # container region volume: V = pi * dc^2/4 * hc [m3]
            # max. apparent diffusion of I in bentonite: D = 2e-10 [m2.s-1]
            # approx. surrounding bentonite buffer layer: w = 1m
            # new sigma: D/w * S/V [m2.s-1 . m-1 . m2 . m-3 = s-1]
            value:  (2e-10) / <sources_buffer_thickness>  * <sources_uos_surface> / <sources_container_vol>
          sources_conc: !FieldFormula
            # [kg/y/m2] -> [kg/s/m2]
#            value: 1 # source_bc_flux_t / (365.2425 * 24 * 3600)
              value: 0.1 * exp(-(5 * log(10) / 1000) * maximum(t / (365.2425 * 24 * 3600), 100))

#          bc_flux: !FieldFormula
#            #value: bc_flux_x * bc_flux_t / (365.2425 * 24 * 3600)  conc in mg/m3
#            value: bc_flux_x * bc_flux_t / (365.2425 * 0.24 * 0.36)
#            #unit: kg*m*md/y  unfortunately does not work so we scale manually from kg/y/m2 to kg/s/m2
#            # even for nonzero diffusion getting zero mass in balance and substantial error (since fluxes are taken from field evaluation)
#            # trying some scaling in between (could be interpreted as change in conc unit anyway)
      solver:
        a_tol: <trans_solver__a_tol>
        r_tol: <trans_solver__r_tol>
        options: -ksp_type gmres -pc_type ilu -pc_factor_levels 2 -ksp_diagonal_scale -ksp_diagonal_scale_fix -pc_factor_fill 1.0 -ksp_monitor

      output:
        fields:
          - field: conc
            interpolation: [P0_value, D1_value] #[P0_value, P1_average, D1_value]
#            interpolation: [P0_value, P1_average, D1_value] #[P0_value, P1_average, D1_value]
          - field: region_id
            interpolation: [P0_value]
          - porosity
#        - peclet_number
    output_stream:
      format: !vtk
        variant: ascii
#        variant: binary_zlib
      times: #<output_times>
        - [30, 'y']
        - [60, 'y']
        - [120, 'y']
        - [240, 'y']
        - [500, 'y']
        - [1100, 'y']
        - [2300, 'y']
        - [5000, 'y']
        - [10000, 'y']
        - begin: [20000, 'y']
          step: [20000, 'y']


    time:
      end_time: [<end_time_years>, 'y']
      max_dt: [20000, 'y']
      dt_limits:
        - time: [0, 'y']
          max_dt: [30, 'y']
        - time: [60, 'y']             # 2
          max_dt: [60, 'y']
        - time: [540, 'y']            # 10
          max_dt: [120, 'y']
        - time: [1100, 'y']           # 15
          max_dt: [240, 'y']
        - time: [2300, 'y']          # 20
          max_dt: [500, 'y']
        - time: [5000, 'y']          # 25
          max_dt: [1000, 'y']        #
        - time: [10000, 'y']          # 30
          max_dt: [2500, 'y']        #
        - time: [20000, 'y']          # 34
          max_dt: [5000, 'y']        #
        - time: [40000, 'y']          # 38
          max_dt: [10000, 'y']        #
        - time: [80000, 'y']          # 42
          max_dt: [20000, 'y']        # 53
      common_time_unit: y
      write_used_timesteps: time_steps.yaml
    balance:
      cumulative: true
